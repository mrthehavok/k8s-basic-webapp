name: Deploy Infrastructure and Application

on:
  pull_request:
    branches: ["main"]
    paths:
      - "terraform/**"
      - "k8s/**"
      - ".github/workflows/deploy.yml"
  push:
    branches: ["main"]
    paths:
      - "terraform/**"
      - "k8s/**"
      - ".github/workflows/deploy.yml"

env:
  TF_WORKING_DIR: terraform
  AWS_REGION: eu-west-1
  TF_VAR_FILE: terraform.tfvars

permissions:
  id-token: write # required for assuming a role with OpenID Connect
  contents: read # required for actions/checkout
  pull-requests: write # required for adding comments to PRs with plan

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.0"

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan (Pull Request)
        if: github.event_name == 'pull_request'
        id: plan
        run: |
          terraform plan -input=false -no-color -out=tfplan -var-file=../${{ env.TF_VAR_FILE }}

          # Create a human-readable summary
          echo "### Terraform Plan Summary" >> $GITHUB_STEP_SUMMARY
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```terraform' >> $GITHUB_STEP_SUMMARY
          terraform show -no-color tfplan >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY

      - name: Terraform Apply (Push to main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -input=false -auto-approve -var-file=../${{ env.TF_VAR_FILE }}

  kubernetes:
    name: Kubernetes
    runs-on: ubuntu-latest
    if: needs.terraform.result == 'success'
    needs: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Verify AWS CLI
        run: |
          aws --version
          which aws

      - name: Set up Terraform for outputs
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.0"

      - name: Terraform Init for Outputs
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name $(terraform -chdir="${{ env.TF_WORKING_DIR }}" output -raw cluster_name)

      - name: Debug kubeconfig
        run: |
          echo "Kubeconfig content (without sensitive data):"
          cat ~/.kube/config | grep -E "(cluster:|user:|name:|exec:)" | head -20

      - name: Get EKS token and test authentication
        run: |
          echo "Testing AWS identity..."
          aws sts get-caller-identity

          echo "Getting cluster name..."
          CLUSTER_NAME=$(cd terraform && terraform output -raw cluster_name)
          echo "Cluster name: $CLUSTER_NAME"

          echo "Testing EKS token generation..."
          aws eks get-token --region ${{ env.AWS_REGION }} --cluster-name $CLUSTER_NAME

          echo "Testing kubectl authentication..."
          kubectl auth can-i get pods --all-namespaces

      - name: Create namespace if absent
        run: kubectl create namespace calculator --dry-run=client -o yaml | kubectl apply -f -

      - name: Kubernetes Diff
        if: github.event_name == 'pull_request'
        run: |
          kubectl diff -f k8s/ --namespace calculator || true

      - name: Kubernetes Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          # Use kustomize to set the new image tag and apply the manifests
          kustomize edit set image ghcr.io/${{ github.repository }}/calculator=ghcr.io/${{ github.repository }}/calculator:${{ github.sha }}
          kubectl apply -k . -n calculator
        working-directory: k8s
